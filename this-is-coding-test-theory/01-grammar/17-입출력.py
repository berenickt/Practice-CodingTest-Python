"""
알고리즘 문제 풀이의 첫 번째 단계는 데이터를 입력받는 것이다.
파이썬에서 데이터를 입력받을 때는 input()을 이용한다.

input()의 경우 한 줄의 문자열을 입력 받도록 해준다. 
만약, 파이썬에서 입력받은 데이터를 정수형 데이터로 처리하기 위해서는 
문자열을 정수로 바꾸는 int() 함수를 사용해야 한다.

또한, 여러개의 데이터를 받을 때는 데이터가 공백으로 구분되는 경우가 많다. 
그래서 입력받은 문자열을 띄어쓰기로 구분하여 
각각 정수 자료형의 데이터로 저장하는 코드의 사용 빈도가 매우 높다

이때는 list(map(int, input().split()))을 이용하면 된다.

동작과정은 다음과 같다.
1. input()으로 입력받은 문자열을 split()을 이용해 
    공백으로 나눈 리스트로 바꾼다.
2. map()을 이용하여 
    해당 리스트의 모든 원소에 int() 함수를 적용한다.
3. 그 결과를 다시 list()를 바꾸면서 
    문자열을 띄어쓰기로 구분하여 각각 숫자 자료형으로 저장한다.

    
이 코드는 정말 많이 사용되므로, 반드시 외우고 있어야 한다.
코딩테스트에서 입력을 위해 사용되는 전형적인 소스코드는 다음과 같다.    
"""
n = int(input())
data = list(map(int, input().split()))

data.sort(reverse=True)
print(data)

"""
만약, 공백으로 구분된 데이터의 개수가 많지 않다면, 
단순히 map(int, input().split())을 이용하는것도 가능하다.

예를 들어, 문제에 첫째 줄에 n, m, k가 공백으로 구분되어 
입력된다는 내용이 명시되어있다고 가정하자. 
다음과 같이 사용할 수 있다.
"""
n, m, k = map(int, input().split())

"""
또한, 문제를 풀다보면 입력을 최대한 빠르게 받아야 하는 경우가 있다.
흔히 정렬, 이진 탐색, 최단경로 문제의 경우 
매우 많은 수의 데이터가 연속적으로 입력이 되곤 한다.

예를 들어 1,000만 개가 넘는 라인이 입력되는 경우 
입력을 받는 것만으로도 시간 초과를 받을 수 있다.

따라서, 언어별로 입력을 더 빠르게 받는 방법을 알고 있어야 한다.
- C++    : cin()보다 scanf()를 권장한다.
- python : input()보다 sys.stdin.readline()을 권장한다.

sys 라이브러리를 사용 할 때는 한 줄 입력을 받고나서 
rstrip() 함수를 꼭 호출해야한다. 

readline()으로 입력하면 입력 후 엔터가 줄 바꿈 기호로 입력되는데, 
이 공백 문자를 제거하려면 rstrip() 함수를 사용해야한다.
이 또한 짧은 코드이니 관행적으로 외워 사용하자.
"""
import sys

data = sys.stdin.readline().rstrip()
print(data)

"""출력
출력을 할 때는 print()를 이용하여 출력을 진행 할 수 있다.
print()는 변수나 상수를 매개변수로 입력받아 이를 표준 출력으로 출력한다. 
print()는 각 변수를 콤마(,)로 구분하여 매개변수로 넣을 수 있는데, 
각 변수가 띄어쓰기로 구분되어 출력한다
"""
#### (1) 기본적인 사용법
a = 1
b = 1
print(a, b)
# 👉🏽 1 2

#### (2) 기본적인 사용법 2
a = 1
b = 1

print(a)
print(b)
# 👉🏽 1
# 👉🏽 2

#### (3) 출력시 오류가 발생하는 코드
a = 1
b = 1
add = a + b

print("a와 b를 더한값은" + add + "입니다.")
# 👉🏽 Traceback (most recent call last):
#   File "/Users/yw_tech/codingTest/20.12.24./output_sample.py", line 5, in <module>
#     print("a와 b를 더한값은" + add + "입니다.")
# TypeError: can only concatenate str (not "int") to str

#### (4) 정상출력되는 코드
a = 1
b = 1
add = a + b

print("a와 b를 더한값은" + str(add) + "입니다.")
# 👉🏽 a와 b를 더한값은2입니다.

#### (5) 콤마(,)사용시 의도치 않은 공백주의 코드
a = 1
b = 1
add = a + b
print("a와 b를 더한값은", str(add), "입니다.")
# 👉🏽 a와 b를 더한값은 2 입니다.

#### (6) f-string 코드 (파이썬 3.6이상 버전)
a = 1
b = 1
add = a + b

print(f"a와 b를 더한값은{add}입니다.")
# 👉🏽 a와 b를 더한값은2입니다.
