"""
반복을 수행하되 반복을 위한 변수의 값을 무시하고자 할 때 
언더바(_)를 자주 사용

코테에서 2차원 리스트를 초기화 할 때 매우 효과적
"""
# N x M 크기의 2차원 리스트 초기화
n = 3
m = 4

array = [m * [0] for _ in range(n)]
# 👉🏽  [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

"""
참고로 특정 크기의 2차원 리스트를 초기화 할때는 
반드시 리스트 컴프리헨션을 사용해야한다.
만약, 다음과 같이 N x M 크기의 2차원 리스트를 초기화한다면, 
의도치않은 결과가 나올 수 있다.
"""
#### (1) N x M 크기의 2차원 리스트 초기화(잘못된 방법)
n = 3
m = 4
array1 = [m * [0]] * n

array1[1][1] = 5
print(array1)
# 👉🏽 [[0, 5, 0, 0], [0, 5, 0, 0], [0, 5, 0, 0]]

#### (2) 올바른 방법
n = 3
m = 4
array2 = [m * [0] for _ in range(n)]

array2[1][1] = 5
print(array2)
# 👉🏽 [[0, 0, 0, 0], [0, 5, 0, 0], [0, 0, 0, 0]]

"""
잘못된 방법으로는 3개의 리스트에서 
인덱스 1에 해당하는 원소들의 값이 모두 5로 바뀐것을 확인 할 수 있다. 

이는 내부적으로 포함된 3개의 리스트가 
모두 동일한 객체에 대한 3개의 레퍼런스로 인식되기 때문이다.

따라서, 특정한 크기를 가지는 2차원 리스트를 초기화 할 때는 
리스트 컴프리헨션을 이용해야 한다는 점을 기억하자.
"""
