"""
큰 수의 법칙은 다양한 수로 이루어진 배열이 있을 때, 주어진 수들을 M번 더하여 가장 큰 수를 만드는 법칙이다.
단, 배열의 특정한 인덱스(번호)에 해당하는 수가 연속해서 K번을 초과하여 더해질 수 없는 것이 이 법칙의 특징이다.

예를 들어, 순서대로 2, 4, 5, 4, 6 으로 된 배열이 있을 때, 
M이 8이고, K가 3이라고 가정했을 때, 큰 수의 법칙으로 6+6+6+5+6+6+6+5인 46이 되게 된다.

단, 서로 다른 인덱스에 해당하는 수가 동일한 수라도 서로 다른 것으로 간주한다. 

e.g. 3, 4, 3, 4, 3이 있을 때, M이 7이고, K가 2라고 가정하면, 
큰 수의 법칙 결과, 4+4+4+4+4+4+4인 28이 된다.

배열의 크기 N, 
숫자가 더해지는 횟수 M, 
그리고 연속해서 더할 수 있는 최대 횟수 K가 주어질 때, 
동빈이의 큰 수의 법칙에 따른 결과를 출력하시오.

input #1
5 8 3
2 4 5 4 6

output #1 
46

cf.
1. 수를 입력 받아 배열에 담는다.
2. 배열을 정렬하여 제일 큰 수와, 두 번째로 큰 수를 구한다.
3. 제일 큰 수를 K번 더하고 두 번째로 큰 수를 한 번 더하기를 반복한다.
"""
# N, M, K를 공백을 기준으로 구분하여 입력 받기
n, m, k = map(int, input().split())

# N개의 수를 공백을 기준으로 구분하여 입력 받기
data = list(map(int, input().split()))

data.sort()  # 입력 받은 수들 정렬하기
first = data[n - 1]  # 가장 큰 수
second = data[n - 2]  # 두 번째로 큰 수

# 가장 큰 수가 더해지는 횟수 계산
count = int(m / (k + 1)) * k
count += m % (k + 1)

result = 0
result += (count) * first  # 가장 큰 수 더하기
result += (m - count) * second  # 두 번째로 큰 수 더하기

print(result)  # 최종 답안 출력
