"""
각 자리가 숫자(0부터 9)로만 이루어진 문자열 S가 주어졌을 때,
왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며
숫자 사이에 'X' 혹은 '+' 연산자를 넣어 
결과적으로 만들어질 수 있는 가장 큰 수를 구하는 프로그램을 작성하세요.

단, +보다 X를 먼저 계산하는 일반적인 방식과는 달리, 
모든 연산은 왼쪽에서부터 순서대로 이루어진다고 가정합니다.

e.g. 02984라는 문자열이 주어지면, 
만들어질 수 있는 가장 큰 수는 (((( 0 + 2 ) x 9) x 8) x 4) = 576 입니다.
또한, 만들어질 수 있는 가장 큰 수는 항상 20억 이하의 정수가 되도록 입력이 주어집니다.

cf. 
첫째 줄에 여러 개의 숫자로 구성된 하나의 문자열 S가 주어집니다. 
(1 <= S의 길이 <= 20)

input #1
02984

output #1 만들어질 수 있는 가장 큰 수
576

Tip
일반적으로 특정한 두 수에 대하여 연산을 수행할 때, 
'+' 보다는 'x'가 값을 더 크게 만든다.
즉, 두 수에 대하여 연산을 수행할 때, 
두 수 중에서 하나라도 1 이하인 경우에는 더하며, 
두 수가 모두 2 이상인 경우에는 곱하면 된다.
"""
data = input()

# 첫 번째 문자를 숫자로 변경하여 대입
result = int(data[0])

for i in range(1, len(data)):
    # 두 수 중에서 하나라도 '0' 혹은 '1'인 경우, 곱하기보다는 더하기 수행
    num = int(data[i])
    if num <= 1 or result <= 1:
        result += num
    else:
        result *= num

print(result)
