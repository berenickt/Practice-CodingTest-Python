# 📚 https://www.acmicpc.net/problem/1439
"""
다솜이는 0과 1로만 이루어진 문자열 S를 가지고 있다.
다솜이는 이 문자열 S에 있는 모든 숫자를 전부 같게 만들려고 한다.
다솜이가 할 수 있는 행동은 S에서 연속된 하나 이상의 숫자를 잡고 모두 뒤집는 것이다. 
뒤집는 것은 1을 0으로, 0을 1로 바꾸는 것을 의미한다.

e.g. S=0001100 일 때,
전체를 뒤집으면 1110011이 된다.
4번째 문자부터 5번째 문자까지 뒤집으면 1111111이 되어서 
2번 만에 모두 같은 숫자로 만들 수 있다.
하지만, 처음부터 4번째 문자부터 5번째 문자까지 문자를 뒤집으면, 
한 번에 0000000이 되어서 1번 만에 모두 같은 숫자로 만들 수 있다.

문자열 S가 주어졌을 때,
다솜이가 해야하는 행동의 최소 횟수를 출력하시오.

input #1
0001100

output #1
1

Tip
전부 0으로 바꾸는 경우와 전부 1로 바꾸는 경우 중 
더 적은 횟수를 가지는 경우를 계산한다.

즉, 전체 문자열을 처음부터 탐색하며,
0이 연속되는 부분의 개수와 1이 연속되는 부분의 개수를 파악한 뒤,
더 적은 개수를 가진 값을 출력하면 됩니다.
연속되는 부분의 개수는, 현재 숫자와 다음 숫자가 달라질 때, 카운팅하면 됩니다.
"""

data = input()
count0 = 0  # 전부 0으로 바꾸는 경우
count1 = 0  # 전부 1로 바꾸는 경우

# 첫 번째 원소에 대해서 처리
if data[0] == "1":
    count0 += 1
else:
    count1 += 1

# 두 번째 원소부터 모든 원소를 확인하며
for i in range(len(data) - 1):
    if data[i] != data[i + 1]:
        # 다음 수에서 1로 바뀌는 경우
        if data[i + 1] == "1":
            count0 += 1
        # 다음 수에서 0으로 바뀌는 경우
        else:
            count1 += 1

print(min(count0, count1))
