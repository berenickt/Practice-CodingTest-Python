# 💡 스택 수열 📚 https://www.acmicpc.net/problem/1874
"""
스택에 수를 push 할 때는 반드시 오름차순으로만 push할 수 있다.

e.g., 8을 push해야 한다면 앞의 1~7까지를 모두 push하고 8을 push할 수 있다.
그리고 스택을 쌓다가 필요한 타이밍에 pop을 하게 되는데, 이 pop을 한 수들을 쭉 나열했을 때,
N줄에 걸쳐 입력한 수열과 같아야 한다.

e.g. N=8이고 다음줄부터 4, 3, 6, 8, 7, 5, 2, 1을 입력한 상황을 보면
스택을 쌓다가 중간에 한번씩 pop을 한 데이터들을 나열한 순서도 4, 3, 6, 8, 7, 5, 2, 1이 되어야 한다

처음으로 4를 입력했다.
즉, 내가 첫 번째로 pop한 숫자가 4가 되어야 한다. 그러기 위해서는 1,2,3,4가 이미 스택안에 있어야 한다.
그래서 입력한 수를 만날 때 까지는 계속 push를 해서 1,2,3,4가 스택에 있도록 해야한다

그리고 나서 4를 꺼내 스택은 현재 1,2,3인 상황이다.
그 다음으로 3이 주어졌기 때문에 push없이 현재 스택에서 pop을 하면 된다. 그리고 스택은 1,2가 된다.
그다음 입력으로 6이 주어졌기 때문에, 다시 6을 만날 때 까지 이전의 숫자들을 push 해준다. ( 즉 5, 6 push )

----------
이 때, stack에서 pop할 숫자(TOP)가 입력한 숫자가 아닐 경우(작을 경우) 정답을 완성할 수 없다.
왜냐하면 TOP 값이 입력한 숫자보다 크면, 입력한 수를 꺼내기 위해 계속 POP을 해야 하기 때문에
그 과정에서 POP한 수들의 수열이 정답과 일치하지 않게 되기 때문이다.

e.g. 1, 2, 5, 3, 4가 입력으로 주어졌다고 하자.
1을 입력했을 때 스택은 [1]       -> pop -> 1
2을 입력했을 때 스택은 [2]       -> pop -> 2
5을 입력했을 때 스택은 [3, 4, 5] -> pop -> 5
3을 입력했을 때 스택은 [3, 4]    -> pop -> 4 가 된다. 
3이 먼저 나와야 하는데 4가 먼저 나와버린 것이다
"""
import sys

n = int(input())
stack = []
result = []

# n개의 숫자를 입력받아 수열 리스트에 저장
progression = [int(input()) for _ in range(n)]

# 스택에 push할 오름차순 자연수, 맨 처음에 들어간 것이 없으니 0으로 초기화
currentNum = 0

for el in progression:
    # 입력된 숫자가 현재 최댓값보다 큰 경우
    if el > currentNum:
        # el와 같아질 때까지, currentNum의 값을 1씩 올리면서 push를 반복, '+' 기호를 추가하여 push 동작을 표시
        while el > currentNum:
            currentNum += 1
            stack.append(currentNum)
            result += ["+"]

        # el와 같아져서 반복이 끝난 후, 스택에서 값을 제거하고, '-' 기호를 추가하여 pop 동작을 표시
        stack.pop()
        result += ["-"]

    # 입력된 숫자가 현재 최댓값보다 작거나 같은 경우
    else:
        # 스택의 맨 위 값과 입력된 숫자가 다른 경우 'NO' 출력
        if stack[-1] != el:
            print("NO")
            sys.exit(0)  # 프로그램 종료
        # 스택의 맨 위 값과 입력된 숫자가 같은 경우, 스택에서 값을 제거하여 pop 동작 표시
        stack.pop()
        result += ["-"]

# 결과 리스트의 내용을 개행문자와 함께 출력
print("\n".join(result) + "\n")
