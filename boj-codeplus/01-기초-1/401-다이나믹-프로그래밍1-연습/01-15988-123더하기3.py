# 💡 1, 2, 3 더하기 3 📚 https://www.acmicpc.net/problem/15988
# 큰 정수 배열 d를 생성하고 초기화
d = [0] * 1000001

# 모듈러 연산을 위한 상수 설정
mod = 1000000009

# 초기값 설정 (0은 1가지 경우의 수로 초기화)
d[0] = 1

# 동적 계획법을 활용하여 배열 d를 계산하는 반복문 시작
for i in range(1, 1000000 + 1):
    # i - 1 번째 경우의 수를 현재 경우의 수에 더함
    if i - 1 >= 0:
        d[i] += d[i - 1]
    # i - 2 번째 경우의 수를 현재 경우의 수에 더함
    if i - 2 >= 0:
        d[i] += d[i - 2]
    # i - 3 번째 경우의 수를 현재 경우의 수에 더함
    if i - 3 >= 0:
        d[i] += d[i - 3]
    # 모듈러 연산을 적용하여 값이 너무 커지지 않도록 함
    d[i] %= mod

# 테스트 케이스의 개수 입력
TEST_CASE = int(input())

# 테스트 케이스별로 결과 출력
for _ in range(TEST_CASE):
    n = int(input())
    print(d[n])
