# 📚 https://school.programmers.co.kr/learn/courses/30/lessons/181881
"""
정수 배열 arr가 주어집니다.
arr의 각 원소에 대해 값이 50보다 크거나 같은 짝수라면 2로 나누고, 
50보다 작은 홀수라면 2를 곱하고 다시 1을 더합니다.

이러한 작업을 x번 반복한 결과인 배열을 arr(x)라고 표현했을 때,
arr(x) = arr(x + 1)인 x가 항상 존재합니다.
이러한 x 중 가장 작은 값을 return

단, 두 배열에 대한 "="는 두 배열의 크기가 서로 같으며,
같은 인덱스의 원소가 각각 서로 같음을 의미

입력#1
[1, 2, 3, 100, 99, 98]

출력#1
5

입출력 설명#1
0	[1, 2, 3, 100, 99, 98]
1	[3, 2, 7, 50, 99, 49]
2	[7, 2, 15, 25, 99, 99]
3	[15, 2, 31, 51, 99, 99]
4	[31, 2, 63, 51, 99, 99]
5	[63, 2, 63, 51, 99, 99]
6	[63, 2, 63, 51, 99, 99]
arr(5) = arr(6)이므로 5를 return
"""


def solution(arr):
    # 조건에 따라 변환되는 배열을 case 리스트에 저장
    case = [0, arr]  # e.g.1) [0, [1, 2, 3, 100, 99, 98]]
    repeat = 0

    # print(case[-1]) # [1, 2, 3, 100, 99, 98]
    # 마지막 원소와 마지막 앞에 원소 2개가 다른 동안 순회
    while case[-1] != case[-2]:
        new_arr = []
        for n in case[-1]:
            if n >= 50 and n % 2 == 0:
                new_arr.append(n // 2)
            elif n < 50 and n % 2 != 0:
                new_arr.append(n * 2 + 1)
            else:
                new_arr.append(n)
        case.append(new_arr)
        repeat += 1

    # 마지막에 반복횟수를 반환할 때 1을 빼준 이유:
    # 마지막 배열(case[-1])값이 그 전의 값(case[-2])값과 같기 때문에
    # 같은 배열이 오기 전까지의 반복횟수를 구하기 위해서
    return repeat - 1


print(solution([1, 2, 3, 100, 99, 98]))
