# 📚 https://www.acmicpc.net/problem/11726
"""
이 문제 또한 다이나믹 프로그래밍 기초 예제에서 빠질 수 없는 타일링 문제 유형이다. 
문제를 잘 보면 마지막에 10,007로 나눈 나머지를 출력하라고 명시되어있는데,

이는 단지 결과값이 굉장히 커질 수 있기 때문에 그런 것이다.
식 마지막에 (d[x-1] + d[x-2]) % 10007을 붙여주자.

처음에 타일링 문제를 풀때 이해가 하나도 되지않았다.
왜 점화식을 사용해야하고 어떻게 작성하는지 감이 안와서 절망하며
강의의 다이나믹프로그래밍 타일링 문제에 어떻게 점화식을 작성해야하는지 잘 나와있다.

백준에서 타일링문제를 몇 번 풀어보니까 점화식이 대체로 큰 틀에서 벗어나지 않는다는 느낌을 받았다.
점화식을 구할 때 N=1, N=2일 때의 경우의 수를 구하고 
처음에 선언해준 뒤 나중에 N-1, N-2의 경우의 수를 구하면 끝이었다.
"""
n = int(input())

# memoization을 위함
cache = [0] * 1001

# n이 1,2인 경우는 명확하니까 미리 선언해둔다.
cache[1] = 1
cache[2] = 2

# dynamic programming
for i in range(3, 1001):
    cache[i] = (cache[i - 1] + cache[i - 2]) % 10007

print(cache[n])
