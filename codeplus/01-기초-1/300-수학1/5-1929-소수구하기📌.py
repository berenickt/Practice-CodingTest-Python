# 💡 소수 구하기 📚 https://www.acmicpc.net/problem/1929
"""
에라토스테네스의 체는 소수를 찾는 방법 중 하나입니다.

(1) 2부터 소수를 구하고자 하는 구간의 모든 수를 나열합니다.
(2) 2 자신을 제외한 2의 배수를 모두 지웁니다.
(3) 남아있는 수 가운데 3은 소수이므로 놔두고, 자신을 제외한 3의 배수를 모두 지웁니다.
(4) 남아있는 수 가운데 5는 소수이므로 자기 자신을 제외한 5의 배수를 모두 지웁니다.
(5) 남아있는 수 가운데 7은 소수이므로 자신을 제외한 7의 배수를 모두 지운다.
(6) 위의 과정을 반복하면 구하는 구간의 모든 소수가 남게됩니다.
"""

# 소수 판별을 위한 최대 범위를 지정
MAX = 1000000

# 소수 여부를 저장하는 리스트를 생성하고, 초기값을 False로 설정
check = [0] * (MAX + 1)

# 0과 1은 소수가 아니므로 True로 표시
check[0] = check[1] = True

# 에라토스테네스의 체 알고리즘을 사용하여 소수를 판별
for i in range(2, MAX + 1):
    if not check[i]:
        j = i + i
        # i의 배수들을 소수가 아닌 것(True)으로 표시
        while j <= MAX:
            check[j] = True
            j += i

# 입력: 두 정수 m과 n을 입력받음
m, n = map(int, input().split())

# m부터 n까지의 범위에서 소수를 출력
for i in range(m, n + 1):
    if check[i] == False:
        print(i)
