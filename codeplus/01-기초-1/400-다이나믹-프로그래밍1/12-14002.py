# 💡 가장 긴 증가하는 부분 수열 4 📚 https://www.acmicpc.net/problem/14002
# 사용자로부터 정수 n을 입력 받음
n = int(input())

# 정수 리스트 a를 입력 받아 공백으로 분리하여 리스트로 저장
a = list(map(int, input().split()))

# 길이가 n인 리스트 d를 생성하고 초기화
d = [0] * n

# 이전 원소를 가리킬 인덱스를 저장하는 리스트 v를 생성하고 초기화
v = [-1] * n

# 각 원소에 대한 최장 증가 부분 수열의 길이와 이전 원소를 저장하는 반복문 시작
for i in range(n):
    # 초기값으로 1을 설정 (최소 길이는 자기 자신이므로)
    d[i] = 1

    # 현재 원소보다 이전 원소들을 검사하며 증가 부분 수열의 길이를 업데이트
    for j in range(i):
        # 이전 원소가 현재 원소보다 작고, 그 원소를 포함한 증가 부분 수열이 더 길다면
        if a[j] < a[i] and d[j] + 1 > d[i]:
            # 현재 원소의 증가 부분 수열의 길이를 업데이트
            d[i] = d[j] + 1
            # 이전 원소의 인덱스를 저장
            v[i] = j

# 최장 증가 부분 수열의 최대 길이를 출력
ans = max(d)
p = [i for i, x in enumerate(d) if x == ans][0]
print(ans)


# 최장 증가 부분 수열을 구성하고 출력하는 함수 정의
def go(p):
    if p == -1:
        return
    go(v[p])
    # 해당 원소를 출력하고 공백으로 구분
    print(a[p], end=" ")


go(p)  # 최장 증가 부분 수열을 출력
print()  # 개행 문자로 줄 바꿈
