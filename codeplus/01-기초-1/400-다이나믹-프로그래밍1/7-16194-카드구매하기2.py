# 💡 카드 구매하기 2 📚 https://www.acmicpc.net/problem/16194
# 정수 n을 입력받음
n = int(input())

# 리스트 a에 0을 추가하고, 사용자로부터 입력받은 숫자들을 리스트로 변환하여 저장
a = [0] + list(map(int, input().split()))

# 각 위치에서 얻을 수 있는 최소 비용을 저장할 배열 d를 초기화
# 초기값으로 -1을 설정하여 아직 계산되지 않은 값을 나타냄
d = [-1] * (n + 1)

# 처음 위치(0)에서의 비용은 0으로 초기화
d[0] = 0

# 바텀업(DP) 방식으로 최소 비용을 계산
for i in range(1, n + 1):
    for j in range(1, i + 1):
        # d[i]가 -1이거나 d[i]가 현재 계산된 비용보다 크면,
        # d[i]를 d[i - j] + a[j]로 업데이트하여 더 작은 비용을 저장함
        if d[i] == -1 or d[i] > d[i - j] + a[j]:
            d[i] = d[i - j] + a[j]

# n번째 위치에서 얻을 수 있는 최소 비용을 출력합니다
print(d[n])
